/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CCMPSender,
  CCMPSenderInterface,
} from "../../contracts/CCMPSender";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "gateway_",
        type: "address",
      },
      {
        internalType: "address",
        name: "gasService_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "functionSignature",
        type: "string",
      },
    ],
    name: "createMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "gasService",
    outputs: [
      {
        internalType: "contract IAxelarGasService",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "contract IAxelarGateway",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "destinationChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "destinationAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516106da3803806106da83398101604081905261002f91610062565b6001600160a01b0391821660a05216608052610095565b80516001600160a01b038116811461005d57600080fd5b919050565b6000806040838503121561007557600080fd5b61007e83610046565b915061008c60208401610046565b90509250929050565b60805160a0516106146100c660003960008181605601526101ad01526000818160a7015261012201526106146000f3fe60806040526004361061003f5760003560e01c8063116191b6146100445780636a22d8cc1461009557806381737028146100c9578063e6ab40af146100de575b600080fd5b34801561005057600080fd5b506100787f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100a157600080fd5b506100787f000000000000000000000000000000000000000000000000000000000000000081565b6100dc6100d7366004610329565b61010b565b005b3480156100ea57600080fd5b506100fe6100f93660046103c3565b610229565b60405161008c919061049f565b604051630c93e3bb60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630c93e3bb9034906101679030908b908b908b908b908b908b9033906004016104e2565b6000604051808303818588803b15801561018057600080fd5b505af1158015610194573d6000803e3d6000fd5b5050604051631c92115f60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169350631c92115f92506101ef9150899089908990899089908990600401610546565b600060405180830381600087803b15801561020957600080fd5b505af115801561021d573d6000803e3d6000fd5b50505050505050505050565b6040805160608082018352600060208301528183018190526001600160a01b0388168252915161025c908590859061058f565b60405180910390206001600160e01b03191681602001818152505085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505050604080830191909152516102c590829060200161059f565b60405160208183030381529060405291505095945050505050565b60008083601f8401126102f257600080fd5b50813567ffffffffffffffff81111561030a57600080fd5b60208301915083602082850101111561032257600080fd5b9250929050565b6000806000806000806060878903121561034257600080fd5b863567ffffffffffffffff8082111561035a57600080fd5b6103668a838b016102e0565b9098509650602089013591508082111561037f57600080fd5b61038b8a838b016102e0565b909650945060408901359150808211156103a457600080fd5b506103b189828a016102e0565b979a9699509497509295939492505050565b6000806000806000606086880312156103db57600080fd5b85356001600160a01b03811681146103f257600080fd5b9450602086013567ffffffffffffffff8082111561040f57600080fd5b61041b89838a016102e0565b9096509450604088013591508082111561043457600080fd5b50610441888289016102e0565b969995985093965092949392505050565b6000815180845260005b818110156104785760208185018101518683018201520161045c565b8181111561048a576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006104b26020830184610452565b9392505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b600060018060a01b03808b16835260a0602084015261050560a084018a8c6104b9565b838103604085015261051881898b6104b9565b9050838103606085015261052d8187896104b9565b9250508084166080840152509998505050505050505050565b60608152600061055a60608301888a6104b9565b828103602084015261056d8187896104b9565b905082810360408401526105828185876104b9565b9998505050505050505050565b8183823760009101908152919050565b6020815260018060a01b03825116602082015260208201516040820152600060408301516060808401526105d66080840182610452565b94935050505056fea2646970667358221220a945ef692eaa69a1ee80f622ee62db57c737e41a82f4f1d9c55ca593e68affa964736f6c63430008090033";

type CCMPSenderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CCMPSenderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CCMPSender__factory extends ContractFactory {
  constructor(...args: CCMPSenderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    gateway_: AddressLike,
    gasService_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(gateway_, gasService_, overrides || {});
  }
  override deploy(
    gateway_: AddressLike,
    gasService_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(gateway_, gasService_, overrides || {}) as Promise<
      CCMPSender & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CCMPSender__factory {
    return super.connect(runner) as CCMPSender__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CCMPSenderInterface {
    return new Interface(_abi) as CCMPSenderInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): CCMPSender {
    return new Contract(address, _abi, runner) as unknown as CCMPSender;
  }
}
