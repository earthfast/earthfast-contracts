/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CCIPSenderAdaptor,
  CCIPSenderAdaptorInterface,
} from "../../contracts/CCIPSenderAdaptor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "link",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "functionSignature",
        type: "string",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "enum CCIPSenderAdaptor.PayFeesIn",
        name: "payFeesIn",
        type: "uint8",
      },
    ],
    name: "createMessage",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "receiver",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "tokenAmounts",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "extraArgs",
            type: "bytes",
          },
        ],
        internalType: "struct Client.EVM2AnyMessage",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "receiver",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "tokenAmounts",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "extraArgs",
            type: "bytes",
          },
        ],
        internalType: "struct Client.EVM2AnyMessage",
        name: "message",
        type: "tuple",
      },
      {
        internalType: "enum CCIPSenderAdaptor.PayFeesIn",
        name: "payFeesIn",
        type: "uint8",
      },
    ],
    name: "sendMessage",
    outputs: [
      {
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610bf9380380610bf983398101604081905261002f91610062565b6001600160a01b039182166080521660a052610095565b80516001600160a01b038116811461005d57600080fd5b919050565b6000806040838503121561007557600080fd5b61007e83610046565b915061008c60208401610046565b90509250929050565b60805160a051610b246100d56000396000818161018c01526104e2015260008181609e0152818161015d0152818161021101526102a90152610b246000f3fe60806040526004361061002d5760003560e01c8063537a6aef14610039578063d8fb212b1461006c57600080fd5b3661003457005b600080fd5b34801561004557600080fd5b50610059610054366004610708565b610099565b6040519081526020015b60405180910390f35b34801561007857600080fd5b5061008c610087366004610866565b610363565b6040516100639190610a11565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166320487ded86866040518363ffffffff1660e01b81526004016100ea929190610a2b565b602060405180830381865afa158015610107573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012b9190610a56565b9050600183600181111561014157610141610a6f565b036102925760405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af11580156101d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f99190610a85565b506040516396f4e9f960e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906396f4e9f9906102489088908890600401610a2b565b6020604051808303816000875af1158015610267573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028b9190610a56565b9150610328565b6040516396f4e9f960e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906396f4e9f99083906102e29089908990600401610a2b565b60206040518083038185885af1158015610300573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906103259190610a56565b91505b6040518281527f54791b38f3859327992a1ca0590ad3c0f08feba98d1a4f56ab0dca74d203392a9060200160405180910390a1509392505050565b61039e6040518060a0016040528060608152602001606081526020016060815260200160006001600160a01b03168152602001606081525090565b604080516060808201835260006020830152818301526001600160a01b038a16815290516103cf9087908790610aa7565b60405180910390206001600160e01b03191681602001818152505087878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250604080870195909552935161043993508592506020019050610ab7565b60408051601f1981840301815260a0830182526001600160a01b03881660c0808501919091528251808503909101815260e084018352835260208084018290528251600080825291810184529194509291820190836104ba565b60408051808201909152600080825260208201528152602001906001900390816104935790505b50815260200160018760018111156104d4576104d4610a6f565b146104e0576000610502565b7f00000000000000000000000000000000000000000000000000000000000000005b6001600160a01b03168152604080516020808201909252600081529101529b9a5050505050505050505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156105685761056861052f565b60405290565b60405160a0810167ffffffffffffffff811182821017156105685761056861052f565b604051601f8201601f1916810167ffffffffffffffff811182821017156105ba576105ba61052f565b604052919050565b600082601f8301126105d357600080fd5b813567ffffffffffffffff8111156105ed576105ed61052f565b610600601f8201601f1916602001610591565b81815284602083860101111561061557600080fd5b816020850160208301376000918101602001919091529392505050565b80356001600160a01b038116811461064957600080fd5b919050565b600082601f83011261065f57600080fd5b8135602067ffffffffffffffff82111561067b5761067b61052f565b610689818360051b01610591565b82815260069290921b840181019181810190868411156106a857600080fd5b8286015b848110156106ee57604081890312156106c55760008081fd5b6106cd610545565b6106d682610632565b815281850135858201528352918301916040016106ac565b509695505050505050565b80356002811061064957600080fd5b60008060006060848603121561071d57600080fd5b833567ffffffffffffffff808216821461073657600080fd5b9093506020850135908082111561074c57600080fd5b9085019060a0828803121561076057600080fd5b61076861056e565b82358281111561077757600080fd5b610783898286016105c2565b82525060208301358281111561079857600080fd5b6107a4898286016105c2565b6020830152506040830135828111156107bc57600080fd5b6107c88982860161064e565b6040830152506107da60608401610632565b60608201526080830135828111156107f157600080fd5b6107fd898286016105c2565b6080830152509350610814915050604085016106f9565b90509250925092565b60008083601f84011261082f57600080fd5b50813567ffffffffffffffff81111561084757600080fd5b60208301915083602082850101111561085f57600080fd5b9250929050565b600080600080600080600060a0888a03121561088157600080fd5b61088a88610632565b9650602088013567ffffffffffffffff808211156108a757600080fd5b6108b38b838c0161081d565b909850965060408a01359150808211156108cc57600080fd5b506108d98a828b0161081d565b90955093506108ec905060608901610632565b91506108fa608089016106f9565b905092959891949750929550565b6000815180845260005b8181101561092e57602081850181015186830182015201610912565b506000602082860101526020601f19601f83011685010191505092915050565b6000815160a0845261096360a0850182610908565b90506020808401518583038287015261097c8382610908565b60408681015188830389830152805180845290850195509092506000918401905b808310156109cf57855180516001600160a01b031683528501518583015294840194600192909201919083019061099d565b50606087015194506109ec60608901866001600160a01b03169052565b608087015194508781036080890152610a058186610908565b98975050505050505050565b602081526000610a24602083018461094e565b9392505050565b67ffffffffffffffff83168152604060208201526000610a4e604083018461094e565b949350505050565b600060208284031215610a6857600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b600060208284031215610a9757600080fd5b81518015158114610a2457600080fd5b8183823760009101908152919050565b6020815260018060a01b0382511660208201526020820151604082015260006040830151606080840152610a4e608084018261090856fea26469706673582212205b74ba9882e54b92f0f37d5c72549660a1bcb2dd58512150b6ce9a7517240d9364736f6c63430008140033";

type CCIPSenderAdaptorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CCIPSenderAdaptorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CCIPSenderAdaptor__factory extends ContractFactory {
  constructor(...args: CCIPSenderAdaptorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    router: AddressLike,
    link: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(router, link, overrides || {});
  }
  override deploy(
    router: AddressLike,
    link: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(router, link, overrides || {}) as Promise<
      CCIPSenderAdaptor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CCIPSenderAdaptor__factory {
    return super.connect(runner) as CCIPSenderAdaptor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CCIPSenderAdaptorInterface {
    return new Interface(_abi) as CCIPSenderAdaptorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CCIPSenderAdaptor {
    return new Contract(address, _abi, runner) as unknown as CCIPSenderAdaptor;
  }
}
