/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CCIPSenderAdaptor,
  CCIPSenderAdaptorInterface,
} from "../../contracts/CCIPSenderAdaptor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "link",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "functionSignature",
        type: "string",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "enum CCIPSenderAdaptor.PayFeesIn",
        name: "payFeesIn",
        type: "uint8",
      },
    ],
    name: "createMessage",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "receiver",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "tokenAmounts",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "extraArgs",
            type: "bytes",
          },
        ],
        internalType: "struct Client.EVM2AnyMessage",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "receiver",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "tokenAmounts",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "extraArgs",
            type: "bytes",
          },
        ],
        internalType: "struct Client.EVM2AnyMessage",
        name: "message",
        type: "tuple",
      },
      {
        internalType: "enum CCIPSenderAdaptor.PayFeesIn",
        name: "payFeesIn",
        type: "uint8",
      },
    ],
    name: "sendMessage",
    outputs: [
      {
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610c3d380380610c3d83398101604081905261002f91610062565b6001600160a01b039182166080521660a052610095565b80516001600160a01b038116811461005d57600080fd5b919050565b6000806040838503121561007557600080fd5b61007e83610046565b915061008c60208401610046565b90509250929050565b60805160a051610b686100d56000396000818161018c01526104e2015260008181609e0152818161015d0152818161021101526102a90152610b686000f3fe60806040526004361061002d5760003560e01c8063537a6aef14610039578063d8fb212b1461006c57600080fd5b3661003457005b600080fd5b34801561004557600080fd5b5061005961005436600461074c565b610099565b6040519081526020015b60405180910390f35b34801561007857600080fd5b5061008c6100873660046108aa565b610363565b6040516100639190610a55565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166320487ded86866040518363ffffffff1660e01b81526004016100ea929190610a6f565b602060405180830381865afa158015610107573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012b9190610a9a565b9050600183600181111561014157610141610ab3565b036102925760405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af11580156101d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f99190610ac9565b506040516396f4e9f960e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906396f4e9f9906102489088908890600401610a6f565b6020604051808303816000875af1158015610267573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028b9190610a9a565b9150610328565b6040516396f4e9f960e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906396f4e9f99083906102e29089908990600401610a6f565b60206040518083038185885af1158015610300573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906103259190610a9a565b91505b6040518281527f54791b38f3859327992a1ca0590ad3c0f08feba98d1a4f56ab0dca74d203392a9060200160405180910390a1509392505050565b61039e6040518060a0016040528060608152602001606081526020016060815260200160006001600160a01b03168152602001606081525090565b604080516060808201835260006020830152818301526001600160a01b038a16815290516103cf9087908790610aeb565b60405180910390206001600160e01b03191681602001818152505087878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250604080870195909552935161043993508592506020019050610afb565b60408051601f1981840301815260a0830182526001600160a01b03881660c0808501919091528251808503909101815260e084018352835260208084018290528251600080825291810184529194509291820190836104ba565b60408051808201909152600080825260208201528152602001906001900390816104935790505b50815260200160018760018111156104d4576104d4610ab3565b146104e0576000610502565b7f00000000000000000000000000000000000000000000000000000000000000005b6001600160a01b0316815260200161056260405180602001604052806207a12081525060408051915160248084019190915281518084039091018152604490920190526020810180516001600160e01b03166397a657c960e01b17905290565b90529b9a5050505050505050505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156105ac576105ac610573565b60405290565b60405160a0810167ffffffffffffffff811182821017156105ac576105ac610573565b604051601f8201601f1916810167ffffffffffffffff811182821017156105fe576105fe610573565b604052919050565b600082601f83011261061757600080fd5b813567ffffffffffffffff81111561063157610631610573565b610644601f8201601f19166020016105d5565b81815284602083860101111561065957600080fd5b816020850160208301376000918101602001919091529392505050565b80356001600160a01b038116811461068d57600080fd5b919050565b600082601f8301126106a357600080fd5b8135602067ffffffffffffffff8211156106bf576106bf610573565b6106cd818360051b016105d5565b82815260069290921b840181019181810190868411156106ec57600080fd5b8286015b8481101561073257604081890312156107095760008081fd5b610711610589565b61071a82610676565b815281850135858201528352918301916040016106f0565b509695505050505050565b80356002811061068d57600080fd5b60008060006060848603121561076157600080fd5b833567ffffffffffffffff808216821461077a57600080fd5b9093506020850135908082111561079057600080fd5b9085019060a082880312156107a457600080fd5b6107ac6105b2565b8235828111156107bb57600080fd5b6107c789828601610606565b8252506020830135828111156107dc57600080fd5b6107e889828601610606565b60208301525060408301358281111561080057600080fd5b61080c89828601610692565b60408301525061081e60608401610676565b606082015260808301358281111561083557600080fd5b61084189828601610606565b60808301525093506108589150506040850161073d565b90509250925092565b60008083601f84011261087357600080fd5b50813567ffffffffffffffff81111561088b57600080fd5b6020830191508360208285010111156108a357600080fd5b9250929050565b600080600080600080600060a0888a0312156108c557600080fd5b6108ce88610676565b9650602088013567ffffffffffffffff808211156108eb57600080fd5b6108f78b838c01610861565b909850965060408a013591508082111561091057600080fd5b5061091d8a828b01610861565b9095509350610930905060608901610676565b915061093e6080890161073d565b905092959891949750929550565b6000815180845260005b8181101561097257602081850181015186830182015201610956565b506000602082860101526020601f19601f83011685010191505092915050565b6000815160a084526109a760a085018261094c565b9050602080840151858303828701526109c0838261094c565b60408681015188830389830152805180845290850195509092506000918401905b80831015610a1357855180516001600160a01b03168352850151858301529484019460019290920191908301906109e1565b5060608701519450610a3060608901866001600160a01b03169052565b608087015194508781036080890152610a49818661094c565b98975050505050505050565b602081526000610a686020830184610992565b9392505050565b67ffffffffffffffff83168152604060208201526000610a926040830184610992565b949350505050565b600060208284031215610aac57600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b600060208284031215610adb57600080fd5b81518015158114610a6857600080fd5b8183823760009101908152919050565b6020815260018060a01b0382511660208201526020820151604082015260006040830151606080840152610a92608084018261094c56fea264697066735822122076236b03481572843e6fb0f8f56e9957ed1e7ca6446bd3718031fd5ba5db64f764736f6c63430008140033";

type CCIPSenderAdaptorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CCIPSenderAdaptorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CCIPSenderAdaptor__factory extends ContractFactory {
  constructor(...args: CCIPSenderAdaptorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    router: AddressLike,
    link: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(router, link, overrides || {});
  }
  override deploy(
    router: AddressLike,
    link: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(router, link, overrides || {}) as Promise<
      CCIPSenderAdaptor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CCIPSenderAdaptor__factory {
    return super.connect(runner) as CCIPSenderAdaptor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CCIPSenderAdaptorInterface {
    return new Interface(_abi) as CCIPSenderAdaptorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CCIPSenderAdaptor {
    return new Contract(address, _abi, runner) as unknown as CCIPSenderAdaptor;
  }
}
