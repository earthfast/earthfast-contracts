/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CCIPReceiverAdaptor,
  CCIPReceiverAdaptorInterface,
} from "../../contracts/CCIPReceiverAdaptor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "nodes_",
        type: "address",
      },
      {
        internalType: "address",
        name: "projects_",
        type: "address",
      },
      {
        internalType: "address",
        name: "registry_",
        type: "address",
      },
      {
        internalType: "address",
        name: "reservations_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "latestMessageId",
        type: "bytes32",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "functionSelector",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61012060405234801561001157600080fd5b50604051610a2f380380610a2f833981016040819052610030916100a5565b846001600160a01b03811661005f576040516335fdcccd60e21b81526000600482015260240160405180910390fd5b6001600160a01b0390811660805293841660a05291831660c052821660e05216610100525061010a565b80516001600160a01b03811681146100a057600080fd5b919050565b600080600080600060a086880312156100bd57600080fd5b6100c686610089565b94506100d460208701610089565b93506100e260408701610089565b92506100f060608701610089565b91506100fe60808701610089565b90509295509295909350565b60805160a05160c05160e051610100516108e7610148600039600050506000505060005050600050506000818160bd01526101de01526108e76000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806301ffc9a7146100515780632bbd59ca1461007957806385572ffb1461009b578063b0f479a1146100b0575b600080fd5b61006461005f3660046103be565b6100e7565b60405190151581526020015b60405180910390f35b61008c6100873660046103ef565b61011e565b60405161007093929190610458565b6100ae6100a9366004610488565b6101d3565b005b6040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152602001610070565b60006001600160e01b031982166385572ffb60e01b148061011857506001600160e01b031982166301ffc9a760e01b145b92915050565b6000602081905290815260409020805460018201546002830180546001600160a01b03909316939192610150906104c3565b80601f016020809104026020016040519081016040528092919081815260200182805461017c906104c3565b80156101c95780601f1061019e576101008083540402835291602001916101c9565b820191906000526020600020905b8154815290600101906020018083116101ac57829003601f168201915b5050505050905083565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610223576040516335fdcccd60e21b81523360048201526024015b60405180910390fd5b61023461022f82610710565b610237565b50565b6000816060015180602001905181019061025191906107bd565b80516020808301516040808501518751825194850152949550929390929091610289910160405160208183030381529060405261029a565b61029383826102dd565b5050505050565b610234816040516024016102ae9190610882565b60408051601f198184030181529190526020810180516001600160e01b03166305f3bfab60e11b179052610399565b600080836001600160a01b0316836040516102f89190610895565b6000604051808303816000865af19150503d8060008114610335576040519150601f19603f3d011682016040523d82523d6000602084013e61033a565b606091505b509150915081610393578051156103545780518082602001fd5b60405162461bcd60e51b8152602060048201526014602482015273119d5b98dd1a5bdb8818d85b1b0819985a5b195960621b604482015260640161021a565b50505050565b6102348160006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b6000602082840312156103d057600080fd5b81356001600160e01b0319811681146103e857600080fd5b9392505050565b60006020828403121561040157600080fd5b5035919050565b60005b8381101561042357818101518382015260200161040b565b50506000910152565b60008151808452610444816020860160208601610408565b601f01601f19169290920160200192915050565b60018060a01b038416815282602082015260606040820152600061047f606083018461042c565b95945050505050565b60006020828403121561049a57600080fd5b813567ffffffffffffffff8111156104b157600080fd5b820160a081850312156103e857600080fd5b600181811c908216806104d757607f821691505b6020821081036104f757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610536576105366104fd565b60405290565b60405160a0810167ffffffffffffffff81118282101715610536576105366104fd565b6040516060810167ffffffffffffffff81118282101715610536576105366104fd565b604051601f8201601f1916810167ffffffffffffffff811182821017156105ab576105ab6104fd565b604052919050565b803567ffffffffffffffff811681146105cb57600080fd5b919050565b600067ffffffffffffffff8211156105ea576105ea6104fd565b50601f01601f191660200190565b600082601f83011261060957600080fd5b813561061c610617826105d0565b610582565b81815284602083860101111561063157600080fd5b816020850160208301376000918101602001919091529392505050565b6001600160a01b038116811461023457600080fd5b600082601f83011261067457600080fd5b8135602067ffffffffffffffff821115610690576106906104fd565b61069e818360051b01610582565b82815260069290921b840181019181810190868411156106bd57600080fd5b8286015b8481101561070557604081890312156106da5760008081fd5b6106e2610513565b81356106ed8161064e565b815281850135858201528352918301916040016106c1565b509695505050505050565b600060a0823603121561072257600080fd5b61072a61053c565b8235815261073a602084016105b3565b6020820152604083013567ffffffffffffffff8082111561075a57600080fd5b610766368387016105f8565b6040840152606085013591508082111561077f57600080fd5b61078b368387016105f8565b606084015260808501359150808211156107a457600080fd5b506107b136828601610663565b60808301525092915050565b600060208083850312156107d057600080fd5b825167ffffffffffffffff808211156107e857600080fd5b90840190606082870312156107fc57600080fd5b61080461055f565b825161080f8161064e565b8152828401518482015260408301518281111561082b57600080fd5b80840193505086601f84011261084057600080fd5b82519150610850610617836105d0565b828152878584860101111561086457600080fd5b61087383868301878701610408565b60408201529695505050505050565b6020815260006103e8602083018461042c565b600082516108a7818460208701610408565b919091019291505056fea264697066735822122043a7ab86c5e137a98b26a493f9b836bc153beffc280ff27c6cf243aa9b5f4ef964736f6c63430008140033";

type CCIPReceiverAdaptorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CCIPReceiverAdaptorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CCIPReceiverAdaptor__factory extends ContractFactory {
  constructor(...args: CCIPReceiverAdaptorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    router: AddressLike,
    nodes_: AddressLike,
    projects_: AddressLike,
    registry_: AddressLike,
    reservations_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      router,
      nodes_,
      projects_,
      registry_,
      reservations_,
      overrides || {}
    );
  }
  override deploy(
    router: AddressLike,
    nodes_: AddressLike,
    projects_: AddressLike,
    registry_: AddressLike,
    reservations_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      router,
      nodes_,
      projects_,
      registry_,
      reservations_,
      overrides || {}
    ) as Promise<
      CCIPReceiverAdaptor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): CCIPReceiverAdaptor__factory {
    return super.connect(runner) as CCIPReceiverAdaptor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CCIPReceiverAdaptorInterface {
    return new Interface(_abi) as CCIPReceiverAdaptorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CCIPReceiverAdaptor {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as CCIPReceiverAdaptor;
  }
}
