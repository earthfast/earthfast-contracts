/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CCIPReceiverAdaptor,
  CCIPReceiverAdaptorInterface,
} from "../../contracts/CCIPReceiverAdaptor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "nodes_",
        type: "address",
      },
      {
        internalType: "address",
        name: "projects_",
        type: "address",
      },
      {
        internalType: "address",
        name: "registry_",
        type: "address",
      },
      {
        internalType: "address",
        name: "reservations_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61012060405234801561001157600080fd5b50604051610c97380380610c97833981016040819052610030916100a5565b846001600160a01b03811661005f576040516335fdcccd60e21b81526000600482015260240160405180910390fd5b6001600160a01b0390811660805293841660a05291831660c052821660e05216610100525061010a565b80516001600160a01b03811681146100a057600080fd5b919050565b600080600080600060a086880312156100bd57600080fd5b6100c686610089565b94506100d460208701610089565b93506100e260408701610089565b92506100f060608701610089565b91506100fe60808701610089565b90509295509295909350565b60805160a05160c05160e05161010051610b3f6101586000396000505060005050600081816101be0152818161026c0152610335015260005050600081816090015260fc0152610b3f6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a71461004657806385572ffb1461006e578063b0f479a114610083575b600080fd5b6100596100543660046103f4565b6100ba565b60405190151581526020015b60405180910390f35b61008161007c366004610425565b6100f1565b005b6040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152602001610065565b60006001600160e01b031982166385572ffb60e01b14806100eb57506001600160e01b031982166301ffc9a760e01b145b92915050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610141576040516335fdcccd60e21b81523360048201526024015b60405180910390fd5b61015261014d8261068d565b610155565b50565b6000816060015180602001905181019061016f9190610798565b805160208201516040830151929350909163e90e7fc960e01b820161023d576000818060200190518101906101a49190610858565b6040516326dc39b160e11b81529091506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690634db87362906101f3908490600401610977565b6020604051808303816000875af1158015610212573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102369190610a11565b50506103ed565b6398576f6760e01b82016102f4576000806000838060200190518101906102649190610a2a565b9250925092507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166367a890998484846040518463ffffffff1660e01b81526004016102ba93929190610a79565b600060405180830381600087803b1580156102d457600080fd5b505af11580156102e8573d6000803e3d6000fd5b505050505050506103ed565b638aa23a6960e01b82016103a557600080828060200190518101906103199190610aa2565b60405163755dc59760e01b815291935091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063755dc5979061036c9085908590600401610ae8565b600060405180830381600087803b15801561038657600080fd5b505af115801561039a573d6000803e3d6000fd5b5050505050506103ed565b60405162461bcd60e51b815260206004820152601960248201527f556e6b6e6f776e2066756e6374696f6e2073656c6563746f72000000000000006044820152606401610138565b5050505050565b60006020828403121561040657600080fd5b81356001600160e01b03198116811461041e57600080fd5b9392505050565b60006020828403121561043757600080fd5b81356001600160401b0381111561044d57600080fd5b820160a0818503121561041e57600080fd5b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156104975761049761045f565b60405290565b60405160a081016001600160401b03811182821017156104975761049761045f565b604051606081016001600160401b03811182821017156104975761049761045f565b60405160c081016001600160401b03811182821017156104975761049761045f565b604051601f8201601f191681016001600160401b038111828210171561052b5761052b61045f565b604052919050565b80356001600160401b038116811461054a57600080fd5b919050565b60006001600160401b038211156105685761056861045f565b50601f01601f191660200190565b600082601f83011261058757600080fd5b813561059a6105958261054f565b610503565b8181528460208386010111156105af57600080fd5b816020850160208301376000918101602001919091529392505050565b6001600160a01b038116811461015257600080fd5b600082601f8301126105f257600080fd5b813560206001600160401b0382111561060d5761060d61045f565b61061b818360051b01610503565b82815260069290921b8401810191818101908684111561063a57600080fd5b8286015b8481101561068257604081890312156106575760008081fd5b61065f610475565b813561066a816105cc565b8152818501358582015283529183019160400161063e565b509695505050505050565b600060a0823603121561069f57600080fd5b6106a761049d565b823581526106b760208401610533565b602082015260408301356001600160401b03808211156106d657600080fd5b6106e236838701610576565b604084015260608501359150808211156106fb57600080fd5b61070736838701610576565b6060840152608085013591508082111561072057600080fd5b5061072d368286016105e1565b60808301525092915050565b805161054a816105cc565b60005b8381101561075f578181015183820152602001610747565b50506000910152565b60006107766105958461054f565b905082815283838301111561078a57600080fd5b61041e836020830184610744565b6000602082840312156107aa57600080fd5b81516001600160401b03808211156107c157600080fd5b90830190606082860312156107d557600080fd5b6107dd6104bf565b82516107e8816105cc565b81526020838101519082015260408301518281111561080657600080fd5b80840193505085601f84011261081b57600080fd5b61082a86845160208601610768565b604082015295945050505050565b600082601f83011261084957600080fd5b61041e83835160208501610768565b60006020828403121561086a57600080fd5b81516001600160401b038082111561088157600080fd5b9083019060c0828603121561089557600080fd5b61089d6104e1565b6108a683610739565b81526020830151828111156108ba57600080fd5b6108c687828601610838565b6020830152506040830151828111156108de57600080fd5b6108ea87828601610838565b60408301525060608301518281111561090257600080fd5b61090e87828601610838565b6060830152506080830151608082015260a08301518281111561093057600080fd5b61093c87828601610838565b60a08301525095945050505050565b60008151808452610963816020860160208601610744565b601f01601f19169290920160200192915050565b602080825282516001600160a01b03168282015282015160c060408301526000906109a560e084018261094b565b90506040840151601f19808584030160608601526109c3838361094b565b925060608601519150808584030160808601526109e0838361094b565b9250608086015160a086015260a08601519150808584030160c086015250610a08828261094b565b95945050505050565b600060208284031215610a2357600080fd5b5051919050565b600080600060608486031215610a3f57600080fd5b8351925060208401516001600160401b03811115610a5c57600080fd5b610a6886828701610838565b925050604084015190509250925092565b838152606060208201526000610a92606083018561094b565b9050826040830152949350505050565b60008060408385031215610ab557600080fd5b8251915060208301516001600160401b03811115610ad257600080fd5b610ade85828601610838565b9150509250929050565b828152604060208201526000610b01604083018461094b565b94935050505056fea2646970667358221220c6ff04c3526d5ebea3268f4804653647eb64bde7752c9fcd8d8f5bb2b752a39164736f6c63430008140033";

type CCIPReceiverAdaptorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CCIPReceiverAdaptorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CCIPReceiverAdaptor__factory extends ContractFactory {
  constructor(...args: CCIPReceiverAdaptorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    router: AddressLike,
    nodes_: AddressLike,
    projects_: AddressLike,
    registry_: AddressLike,
    reservations_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      router,
      nodes_,
      projects_,
      registry_,
      reservations_,
      overrides || {}
    );
  }
  override deploy(
    router: AddressLike,
    nodes_: AddressLike,
    projects_: AddressLike,
    registry_: AddressLike,
    reservations_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      router,
      nodes_,
      projects_,
      registry_,
      reservations_,
      overrides || {}
    ) as Promise<
      CCIPReceiverAdaptor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): CCIPReceiverAdaptor__factory {
    return super.connect(runner) as CCIPReceiverAdaptor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CCIPReceiverAdaptorInterface {
    return new Interface(_abi) as CCIPReceiverAdaptorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CCIPReceiverAdaptor {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as CCIPReceiverAdaptor;
  }
}
