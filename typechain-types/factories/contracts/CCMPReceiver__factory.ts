/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CCMPReceiver,
  CCMPReceiverInterface,
} from "../../contracts/CCMPReceiver";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "gateway_",
        type: "address",
      },
      {
        internalType: "address",
        name: "projects_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NotApprovedByGateway",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "contract IAxelarGateway",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "projects",
    outputs: [
      {
        internalType: "contract ArmadaProjects",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610b98380380610b9883398101604081905261002f9161009f565b816001600160a01b0381166100575760405163e6c4247b60e01b815260040160405180910390fd5b6001600160a01b03908116608052600080546001600160a01b03191692909116919091179055506100d2565b80516001600160a01b038116811461009a57600080fd5b919050565b600080604083850312156100b257600080fd5b6100bb83610083565b91506100c960208401610083565b90509250929050565b608051610aa66100f2600039600081816048015260cd0152610aa66000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063116191b61461004657806349160658146100845780638b79543c14610099575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b03909116815260200160405180910390f35b61009761009236600461044d565b6100ac565b005b600054610068906001600160a01b031681565b600082826040516100be9291906104f1565b604051809103902090506100ef7f000000000000000000000000000000000000000000000000000000000000000090565b6001600160a01b0316635f6970c38989898989876040518763ffffffff1660e01b81526004016101249695949392919061052a565b602060405180830381600087803b15801561013e57600080fd5b505af1158015610152573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610176919061056b565b61019357604051631403112d60e21b815260040160405180910390fd5b6101a2888888888888886101ac565b5050505050505050565b60006101ba82840184610667565b80516020820151604083015192935090916316f1803760e01b82141561027a576000818060200190518101906101f091906107c4565b6000546040516326dc39b160e11b81529192506001600160a01b031690634db87362906102219084906004016108e4565b602060405180830381600087803b15801561023b57600080fd5b505af115801561024f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610273919061097e565b50506103f7565b6367a8909960e01b821415610316576000806000838060200190518101906102a29190610997565b6000546040516367a8909960e01b815293965091945092506001600160a01b0316906367a89099906102dc908690869086906004016109e7565b600060405180830381600087803b1580156102f657600080fd5b505af115801561030a573d6000803e3d6000fd5b505050505050506103f7565b63755dc59760e01b8214156103ab576000808280602001905181019061033c9190610a10565b60005460405163755dc59760e01b81529294509092506001600160a01b03169063755dc597906103729085908590600401610a57565b600060405180830381600087803b15801561038c57600080fd5b505af11580156103a0573d6000803e3d6000fd5b5050505050506103f7565b60405162461bcd60e51b815260206004820152601960248201527f556e6b6e6f776e2066756e6374696f6e2073656c6563746f7200000000000000604482015260640160405180910390fd5b5050505050505050505050565b60008083601f84011261041657600080fd5b50813567ffffffffffffffff81111561042e57600080fd5b60208301915083602082850101111561044657600080fd5b9250929050565b60008060008060008060006080888a03121561046857600080fd5b87359650602088013567ffffffffffffffff8082111561048757600080fd5b6104938b838c01610404565b909850965060408a01359150808211156104ac57600080fd5b6104b88b838c01610404565b909650945060608a01359150808211156104d157600080fd5b506104de8a828b01610404565b989b979a50959850939692959293505050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b868152608060208201526000610544608083018789610501565b8281036040840152610557818688610501565b915050826060830152979650505050505050565b60006020828403121561057d57600080fd5b8151801515811461058d57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156105cd576105cd610594565b60405290565b60405160c0810167ffffffffffffffff811182821017156105cd576105cd610594565b604051601f8201601f1916810167ffffffffffffffff8111828210171561061f5761061f610594565b604052919050565b6001600160a01b038116811461063c57600080fd5b50565b600067ffffffffffffffff82111561065957610659610594565b50601f01601f191660200190565b6000602080838503121561067a57600080fd5b823567ffffffffffffffff8082111561069257600080fd5b90840190606082870312156106a657600080fd5b6106ae6105aa565b82356106b981610627565b815282840135848201526040830135828111156106d557600080fd5b80840193505086601f8401126106ea57600080fd5b823591506106ff6106fa8361063f565b6105f6565b828152878584860101111561071357600080fd5b82858501868301376000858483010152806040830152508094505050505092915050565b805161074281610627565b919050565b60005b8381101561076257818101518382015260200161074a565b83811115610771576000848401525b50505050565b600082601f83011261078857600080fd5b81516107966106fa8261063f565b8181528460208386010111156107ab57600080fd5b6107bc826020830160208701610747565b949350505050565b6000602082840312156107d657600080fd5b815167ffffffffffffffff808211156107ee57600080fd5b9083019060c0828603121561080257600080fd5b61080a6105d3565b61081383610737565b815260208301518281111561082757600080fd5b61083387828601610777565b60208301525060408301518281111561084b57600080fd5b61085787828601610777565b60408301525060608301518281111561086f57600080fd5b61087b87828601610777565b6060830152506080830151608082015260a08301518281111561089d57600080fd5b6108a987828601610777565b60a08301525095945050505050565b600081518084526108d0816020860160208601610747565b601f01601f19169290920160200192915050565b602080825282516001600160a01b03168282015282015160c0604083015260009061091260e08401826108b8565b90506040840151601f198085840301606086015261093083836108b8565b9250606086015191508085840301608086015261094d83836108b8565b9250608086015160a086015260a08601519150808584030160c08601525061097582826108b8565b95945050505050565b60006020828403121561099057600080fd5b5051919050565b6000806000606084860312156109ac57600080fd5b83519250602084015167ffffffffffffffff8111156109ca57600080fd5b6109d686828701610777565b925050604084015190509250925092565b838152606060208201526000610a0060608301856108b8565b9050826040830152949350505050565b60008060408385031215610a2357600080fd5b82519150602083015167ffffffffffffffff811115610a4157600080fd5b610a4d85828601610777565b9150509250929050565b8281526040602082015260006107bc60408301846108b856fea26469706673582212204cc8d3daf8770b102a1af3f2600c277c03c4698c9a8a8373ed3685190a89c82c64736f6c63430008090033";

type CCMPReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CCMPReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CCMPReceiver__factory extends ContractFactory {
  constructor(...args: CCMPReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    gateway_: AddressLike,
    projects_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(gateway_, projects_, overrides || {});
  }
  override deploy(
    gateway_: AddressLike,
    projects_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(gateway_, projects_, overrides || {}) as Promise<
      CCMPReceiver & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CCMPReceiver__factory {
    return super.connect(runner) as CCMPReceiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CCMPReceiverInterface {
    return new Interface(_abi) as CCMPReceiverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CCMPReceiver {
    return new Contract(address, _abi, runner) as unknown as CCMPReceiver;
  }
}
