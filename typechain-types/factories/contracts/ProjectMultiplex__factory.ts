/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ProjectMultiplex,
  ProjectMultiplexInterface,
} from "../../contracts/ProjectMultiplex";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_projects",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_projectId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_withdrawalAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "chainId",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "subProjectId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "castHash",
        type: "bytes",
      },
    ],
    name: "SubProjectCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "chainId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "caster",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "castHash",
        type: "bytes",
      },
    ],
    name: "createProject",
    outputs: [
      {
        internalType: "bytes32",
        name: "subProjectId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "chainId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "caster",
        type: "address",
      },
    ],
    name: "getSubProjectId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "projectId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "projects",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "subProjects",
    outputs: [
      {
        internalType: "uint32",
        name: "chainId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "subProjectId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "castHash",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawalAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161089738038061089783398101604081905261002f91610087565b6001600055600280546001600160a01b039485166001600160a01b031991821617909155600392909255600480549190931691161790556100c3565b80516001600160a01b038116811461008257600080fd5b919050565b60008060006060848603121561009c57600080fd5b6100a58461006b565b9250602084015191506100ba6040850161006b565b90509250925092565b6107c5806100d26000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638b79543c1161005b5780638b79543c146100c65780638c41d612146100f1578063da6e6a1914610104578063f2bcd0221461012757600080fd5b806306b091f9146100825780633100dbf5146100975780633fafa127146100bd575b600080fd5b6100956100903660046104fb565b61013a565b005b6100aa6100a536600461054f565b6101c7565b6040519081526020015b60405180910390f35b6100aa60035481565b6002546100d9906001600160a01b031681565b6040516001600160a01b0390911681526020016100b4565b6100aa6100ff366004610632565b6102cd565b610117610112366004610675565b610323565b6040516100b494939291906106db565b6004546100d9906001600160a01b031681565b6004805460405163a9059cbb60e01b81526001600160a01b03918216928101929092526024820183905283169063a9059cbb90604401602060405180830381600087803b15801561018a57600080fd5b505af115801561019e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c29190610718565b505050565b60006101d16103e8565b6101dc8585856102cd565b6040805160808101825263ffffffff80891682526001600160a01b038089166020808501918252848601878152606086018a815260008981526001808552989020875181549551909616640100000000026001600160c01b0319909516959096169490941792909217845590519483019490945551805194955091938493919261026d926002850192910190610446565b50905050846001600160a01b0316828763ffffffff167ff74c263188381085292ee5229a96e405a8f1615a1d2e97e2c46f5c7854e1da74866040516102b29190610741565b60405180910390a4506102c56001600055565b949350505050565b6003546040805163ffffffff86166020820152908101919091526001600160a01b0380841660608301528216608082015260009060a0016040516020818303038152906040528051906020012090509392505050565b600160208190526000918252604090912080549181015460028201805463ffffffff85169464010000000090046001600160a01b031693919061036590610754565b80601f016020809104026020016040519081016040528092919081815260200182805461039190610754565b80156103de5780601f106103b3576101008083540402835291602001916103de565b820191906000526020600020905b8154815290600101906020018083116103c157829003601f168201915b5050505050905084565b6002600054141561043f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640160405180910390fd5b6002600055565b82805461045290610754565b90600052602060002090601f01602090048101928261047457600085556104ba565b82601f1061048d57805160ff19168380011785556104ba565b828001600101855582156104ba579182015b828111156104ba57825182559160200191906001019061049f565b506104c69291506104ca565b5090565b5b808211156104c657600081556001016104cb565b80356001600160a01b03811681146104f657600080fd5b919050565b6000806040838503121561050e57600080fd5b610517836104df565b946020939093013593505050565b803563ffffffff811681146104f657600080fd5b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561056557600080fd5b61056e85610525565b935061057c602086016104df565b925061058a604086016104df565b9150606085013567ffffffffffffffff808211156105a757600080fd5b818701915087601f8301126105bb57600080fd5b8135818111156105cd576105cd610539565b604051601f8201601f19908116603f011681019083821181831017156105f5576105f5610539565b816040528281528a602084870101111561060e57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060006060848603121561064757600080fd5b61065084610525565b925061065e602085016104df565b915061066c604085016104df565b90509250925092565b60006020828403121561068757600080fd5b5035919050565b6000815180845260005b818110156106b457602081850181015186830182015201610698565b818111156106c6576000602083870101525b50601f01601f19169290920160200192915050565b63ffffffff8516815260018060a01b038416602082015282604082015260806060820152600061070e608083018461068e565b9695505050505050565b60006020828403121561072a57600080fd5b8151801515811461073a57600080fd5b9392505050565b60208152600061073a602083018461068e565b600181811c9082168061076857607f821691505b6020821081141561078957634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212206f9298df69cc8b931b7e4b97d49cacc9b25fa28afc7bb36e8a03e66079ea2b8664736f6c63430008090033";

type ProjectMultiplexConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProjectMultiplexConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProjectMultiplex__factory extends ContractFactory {
  constructor(...args: ProjectMultiplexConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _projects: AddressLike,
    _projectId: BytesLike,
    _withdrawalAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _projects,
      _projectId,
      _withdrawalAddress,
      overrides || {}
    );
  }
  override deploy(
    _projects: AddressLike,
    _projectId: BytesLike,
    _withdrawalAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _projects,
      _projectId,
      _withdrawalAddress,
      overrides || {}
    ) as Promise<
      ProjectMultiplex & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ProjectMultiplex__factory {
    return super.connect(runner) as ProjectMultiplex__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProjectMultiplexInterface {
    return new Interface(_abi) as ProjectMultiplexInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ProjectMultiplex {
    return new Contract(address, _abi, runner) as unknown as ProjectMultiplex;
  }
}
