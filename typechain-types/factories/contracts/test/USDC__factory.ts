/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { USDC, USDCInterface } from "../../../contracts/test/USDC";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101406040523480156200001257600080fd5b506040516200155e3803806200155e833981016040819052620000359162000282565b604051806040016040528060098152602001682aa9a2219021b7b4b760b91b81525080604051806040016040528060018152602001603160f81b815250604051806040016040528060098152602001682aa9a2219021b7b4b760b91b815250604051806040016040528060048152602001635553444360e01b8152508160039081620000c2919062000358565b506004620000d1828262000358565b5050825160209384012082519284019290922060e08390526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818901819052818301979097526060810194909452608080850193909352308483018190528151808603909301835260c09485019091528151919096012090529290925261012052506200018e905081620001786012600a62000539565b6200018890633b9aca006200054a565b62000195565b506200057a565b6001600160a01b038216620001f05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806002600082825462000204919062000564565b90915550506001600160a01b038216600090815260208190526040812080548392906200023390849062000564565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b6000602082840312156200029557600080fd5b81516001600160a01b0381168114620002ad57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002df57607f821691505b6020821081036200030057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200027d57600081815260208120601f850160051c810160208610156200032f5750805b601f850160051c820191505b8181101562000350578281556001016200033b565b505050505050565b81516001600160401b03811115620003745762000374620002b4565b6200038c81620003858454620002ca565b8462000306565b602080601f831160018114620003c45760008415620003ab5750858301515b600019600386901b1c1916600185901b17855562000350565b600085815260208120601f198616915b82811015620003f557888601518255948401946001909101908401620003d4565b5085821015620004145787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200047b5781600019048211156200045f576200045f62000424565b808516156200046d57918102915b93841c93908002906200043f565b509250929050565b600082620004945750600162000533565b81620004a35750600062000533565b8160018114620004bc5760028114620004c757620004e7565b600191505062000533565b60ff841115620004db57620004db62000424565b50506001821b62000533565b5060208310610133831016604e8410600b84101617156200050c575081810a62000533565b6200051883836200043a565b80600019048211156200052f576200052f62000424565b0290505b92915050565b6000620002ad60ff84168362000483565b808202811582820484141762000533576200053362000424565b8082018082111562000533576200053362000424565b60805160a05160c05160e0516101005161012051610f94620005ca600039600061097a015260006109c9015260006109a4015260006108fd01526000610927015260006109510152610f946000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806354fd4d5011610097578063a457c2d711610066578063a457c2d7146101eb578063a9059cbb146101fe578063d505accf14610211578063dd62ed3e1461022657600080fd5b806354fd4d501461018a57806370a08231146101a75780637ecebe00146101d057806395d89b41146101e357600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce567146101605780633644e5151461016f578063395093511461017757600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610239565b60405161010f9190610d5b565b60405180910390f35b61012b610126366004610dc5565b6102cb565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b366004610def565b6102e5565b6040516012815260200161010f565b61013f610309565b61012b610185366004610dc5565b610318565b6040805180820190915260018152603160f81b6020820152610102565b61013f6101b5366004610e2b565b6001600160a01b031660009081526020819052604090205490565b61013f6101de366004610e2b565b61033a565b610102610358565b61012b6101f9366004610dc5565b610367565b61012b61020c366004610dc5565b6103e7565b61022461021f366004610e4d565b6103f5565b005b61013f610234366004610ec0565b610559565b60606003805461024890610ef3565b80601f016020809104026020016040519081016040528092919081815260200182805461027490610ef3565b80156102c15780601f10610296576101008083540402835291602001916102c1565b820191906000526020600020905b8154815290600101906020018083116102a457829003601f168201915b5050505050905090565b6000336102d9818585610584565b60019150505b92915050565b6000336102f38582856106a8565b6102fe858585610722565b506001949350505050565b60006103136108f0565b905090565b6000336102d981858561032b8383610559565b6103359190610f27565b610584565b6001600160a01b0381166000908152600560205260408120546102df565b60606004805461024890610ef3565b600033816103758286610559565b9050838110156103da5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102fe8286868403610584565b6000336102d9818585610722565b834211156104455760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016103d1565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886104748c610a17565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006104cf82610a3f565b905060006104df82878787610a8d565b9050896001600160a01b0316816001600160a01b0316146105425760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016103d1565b61054d8a8a8a610584565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166105e65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103d1565b6001600160a01b0382166106475760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103d1565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006106b48484610559565b9050600019811461071c578181101561070f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103d1565b61071c8484848403610584565b50505050565b6001600160a01b0383166107865760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103d1565b6001600160a01b0382166107e85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103d1565b6001600160a01b038316600090815260208190526040902054818110156108605760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103d1565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610897908490610f27565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108e391815260200190565b60405180910390a361071c565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561094957507f000000000000000000000000000000000000000000000000000000000000000046145b1561097357507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b60006102df610a4c6108f0565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000610a9e87878787610ab5565b91509150610aab81610ba2565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610aec5750600090506003610b99565b8460ff16601b14158015610b0457508460ff16601c14155b15610b155750600090506004610b99565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610b69573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610b9257600060019250925050610b99565b9150600090505b94509492505050565b6000816004811115610bb657610bb6610f48565b03610bbe5750565b6001816004811115610bd257610bd2610f48565b03610c1f5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016103d1565b6002816004811115610c3357610c33610f48565b03610c805760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103d1565b6003816004811115610c9457610c94610f48565b03610cec5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016103d1565b6004816004811115610d0057610d00610f48565b03610d585760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016103d1565b50565b600060208083528351808285015260005b81811015610d8857858101830151858201604001528201610d6c565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610dc057600080fd5b919050565b60008060408385031215610dd857600080fd5b610de183610da9565b946020939093013593505050565b600080600060608486031215610e0457600080fd5b610e0d84610da9565b9250610e1b60208501610da9565b9150604084013590509250925092565b600060208284031215610e3d57600080fd5b610e4682610da9565b9392505050565b600080600080600080600060e0888a031215610e6857600080fd5b610e7188610da9565b9650610e7f60208901610da9565b95506040880135945060608801359350608088013560ff81168114610ea357600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610ed357600080fd5b610edc83610da9565b9150610eea60208401610da9565b90509250929050565b600181811c90821680610f0757607f821691505b602082108103610a3957634e487b7160e01b600052602260045260246000fd5b808201808211156102df57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfea2646970667358221220107de4ae07e3d38baca2651ddea17dafcdfd0a6ebefa3e78e9838c819c45f54764736f6c63430008140033";

type USDCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: USDCConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class USDC__factory extends ContractFactory {
  constructor(...args: USDCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(owner, overrides || {});
  }
  override deploy(
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(owner, overrides || {}) as Promise<
      USDC & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): USDC__factory {
    return super.connect(runner) as USDC__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): USDCInterface {
    return new Interface(_abi) as USDCInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): USDC {
    return new Contract(address, _abi, runner) as unknown as USDC;
  }
}
