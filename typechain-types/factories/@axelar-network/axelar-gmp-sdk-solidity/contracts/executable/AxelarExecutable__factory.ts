/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  AxelarExecutable,
  AxelarExecutableInterface,
} from "../../../../../@axelar-network/axelar-gmp-sdk-solidity/contracts/executable/AxelarExecutable";

const _abi = [
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NotApprovedByGateway",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commandId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "sourceChain",
        type: "string",
      },
      {
        internalType: "string",
        name: "sourceAddress",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "contract IAxelarGateway",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class AxelarExecutable__factory {
  static readonly abi = _abi;
  static createInterface(): AxelarExecutableInterface {
    return new Interface(_abi) as AxelarExecutableInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AxelarExecutable {
    return new Contract(address, _abi, runner) as unknown as AxelarExecutable;
  }
}
