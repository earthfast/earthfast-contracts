/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../common";

export type EarthfastRegistryInitializeDataStruct = {
  version: string;
  nonce: BigNumberish;
  epochStart: BigNumberish;
  lastEpochLength: BigNumberish;
  nextEpochLength: BigNumberish;
  gracePeriod: BigNumberish;
  usdc: AddressLike;
  token: AddressLike;
  billing: AddressLike;
  nodes: AddressLike;
  operators: AddressLike;
  projects: AddressLike;
  reservations: AddressLike;
};

export type EarthfastRegistryInitializeDataStructOutput = [
  version: string,
  nonce: bigint,
  epochStart: bigint,
  lastEpochLength: bigint,
  nextEpochLength: bigint,
  gracePeriod: bigint,
  usdc: string,
  token: string,
  billing: string,
  nodes: string,
  operators: string,
  projects: string,
  reservations: string
] & {
  version: string;
  nonce: bigint;
  epochStart: bigint;
  lastEpochLength: bigint;
  nextEpochLength: bigint;
  gracePeriod: bigint;
  usdc: string;
  token: string;
  billing: string;
  nodes: string;
  operators: string;
  projects: string;
  reservations: string;
};

export interface EarthfastRegistryInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "DEFAULT_ADMIN_ROLE"
      | "RECONCILER_ROLE"
      | "advanceEpoch"
      | "getBilling"
      | "getCuedEpochLength"
      | "getEpochRemainder"
      | "getGracePeriod"
      | "getLastEpochLength"
      | "getLastEpochStart"
      | "getNextEpochLength"
      | "getNodes"
      | "getNonce"
      | "getOperators"
      | "getProjects"
      | "getReservations"
      | "getRoleAdmin"
      | "getToken"
      | "getUSDC"
      | "getVersion"
      | "grantRole"
      | "hasRole"
      | "initialize"
      | "newNonceImpl"
      | "pause"
      | "paused"
      | "proxiableUUID"
      | "renounceRole"
      | "requireNotGracePeriod"
      | "requireNotReconciling"
      | "requireReconciling"
      | "revokeRole"
      | "setCuedEpochLength"
      | "setGracePeriod"
      | "setVersion"
      | "supportsInterface"
      | "unpause"
      | "unsafeSetBilling"
      | "unsafeSetLastEpochStart"
      | "unsafeSetNodes"
      | "unsafeSetOperators"
      | "unsafeSetProjects"
      | "unsafeSetReservations"
      | "unsafeSetToken"
      | "unsafeSetUSDC"
      | "unsafeWithdrawToken"
      | "unsafeWithdrawUSDC"
      | "upgradeTo"
      | "upgradeToAndCall"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "AdminChanged"
      | "BeaconUpgraded"
      | "EpochAdvanced"
      | "Initialized"
      | "Paused"
      | "RoleAdminChanged"
      | "RoleGranted"
      | "RoleRevoked"
      | "Unpaused"
      | "Upgraded"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "DEFAULT_ADMIN_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "RECONCILER_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "advanceEpoch",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getBilling",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getCuedEpochLength",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getEpochRemainder",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getGracePeriod",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getLastEpochLength",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getLastEpochStart",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getNextEpochLength",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "getNodes", values?: undefined): string;
  encodeFunctionData(functionFragment: "getNonce", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getOperators",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getProjects",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getReservations",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin",
    values: [BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "getToken", values?: undefined): string;
  encodeFunctionData(functionFragment: "getUSDC", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getVersion",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [AddressLike[], EarthfastRegistryInitializeDataStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "newNonceImpl",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "pause", values?: undefined): string;
  encodeFunctionData(functionFragment: "paused", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "proxiableUUID",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "requireNotGracePeriod",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "requireNotReconciling",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "requireReconciling",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setCuedEpochLength",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setGracePeriod",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "setVersion", values: [string]): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "unpause", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "unsafeSetBilling",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "unsafeSetLastEpochStart",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "unsafeSetNodes",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "unsafeSetOperators",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "unsafeSetProjects",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "unsafeSetReservations",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "unsafeSetToken",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "unsafeSetUSDC",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "unsafeWithdrawToken",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "unsafeWithdrawUSDC",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "upgradeTo",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "upgradeToAndCall",
    values: [AddressLike, BytesLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "DEFAULT_ADMIN_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "RECONCILER_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "advanceEpoch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getBilling", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getCuedEpochLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getEpochRemainder",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGracePeriod",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLastEpochLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLastEpochStart",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getNextEpochLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getNodes", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getNonce", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getOperators",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProjects",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReservations",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getToken", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getUSDC", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getVersion", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "grantRole", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "hasRole", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "newNonceImpl",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "pause", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "paused", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "proxiableUUID",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "requireNotGracePeriod",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "requireNotReconciling",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "requireReconciling",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "revokeRole", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setCuedEpochLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setGracePeriod",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setVersion", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "unpause", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "unsafeSetBilling",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unsafeSetLastEpochStart",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unsafeSetNodes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unsafeSetOperators",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unsafeSetProjects",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unsafeSetReservations",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unsafeSetToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unsafeSetUSDC",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unsafeWithdrawToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unsafeWithdrawUSDC",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "upgradeTo", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "upgradeToAndCall",
    data: BytesLike
  ): Result;
}

export namespace AdminChangedEvent {
  export type InputTuple = [previousAdmin: AddressLike, newAdmin: AddressLike];
  export type OutputTuple = [previousAdmin: string, newAdmin: string];
  export interface OutputObject {
    previousAdmin: string;
    newAdmin: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace BeaconUpgradedEvent {
  export type InputTuple = [beacon: AddressLike];
  export type OutputTuple = [beacon: string];
  export interface OutputObject {
    beacon: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EpochAdvancedEvent {
  export type InputTuple = [epochStart: BigNumberish];
  export type OutputTuple = [epochStart: bigint];
  export interface OutputObject {
    epochStart: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace InitializedEvent {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace PausedEvent {
  export type InputTuple = [account: AddressLike];
  export type OutputTuple = [account: string];
  export interface OutputObject {
    account: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleAdminChangedEvent {
  export type InputTuple = [
    role: BytesLike,
    previousAdminRole: BytesLike,
    newAdminRole: BytesLike
  ];
  export type OutputTuple = [
    role: string,
    previousAdminRole: string,
    newAdminRole: string
  ];
  export interface OutputObject {
    role: string;
    previousAdminRole: string;
    newAdminRole: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleGrantedEvent {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevokedEvent {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UnpausedEvent {
  export type InputTuple = [account: AddressLike];
  export type OutputTuple = [account: string];
  export interface OutputObject {
    account: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpgradedEvent {
  export type InputTuple = [implementation: AddressLike];
  export type OutputTuple = [implementation: string];
  export interface OutputObject {
    implementation: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface EarthfastRegistry extends BaseContract {
  connect(runner?: ContractRunner | null): EarthfastRegistry;
  waitForDeployment(): Promise<this>;

  interface: EarthfastRegistryInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  DEFAULT_ADMIN_ROLE: TypedContractMethod<[], [string], "view">;

  RECONCILER_ROLE: TypedContractMethod<[], [string], "view">;

  advanceEpoch: TypedContractMethod<
    [topologyNodeId: BytesLike],
    [void],
    "nonpayable"
  >;

  getBilling: TypedContractMethod<[], [string], "view">;

  getCuedEpochLength: TypedContractMethod<[], [bigint], "view">;

  getEpochRemainder: TypedContractMethod<[], [bigint], "view">;

  getGracePeriod: TypedContractMethod<[], [bigint], "view">;

  getLastEpochLength: TypedContractMethod<[], [bigint], "view">;

  getLastEpochStart: TypedContractMethod<[], [bigint], "view">;

  getNextEpochLength: TypedContractMethod<[], [bigint], "view">;

  getNodes: TypedContractMethod<[], [string], "view">;

  getNonce: TypedContractMethod<[], [bigint], "view">;

  getOperators: TypedContractMethod<[], [string], "view">;

  getProjects: TypedContractMethod<[], [string], "view">;

  getReservations: TypedContractMethod<[], [string], "view">;

  getRoleAdmin: TypedContractMethod<[role: BytesLike], [string], "view">;

  getToken: TypedContractMethod<[], [string], "view">;

  getUSDC: TypedContractMethod<[], [string], "view">;

  getVersion: TypedContractMethod<[], [string], "view">;

  grantRole: TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  hasRole: TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;

  initialize: TypedContractMethod<
    [admins: AddressLike[], data: EarthfastRegistryInitializeDataStruct],
    [void],
    "nonpayable"
  >;

  newNonceImpl: TypedContractMethod<[], [bigint], "nonpayable">;

  pause: TypedContractMethod<[], [void], "nonpayable">;

  paused: TypedContractMethod<[], [boolean], "view">;

  proxiableUUID: TypedContractMethod<[], [string], "view">;

  renounceRole: TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  requireNotGracePeriod: TypedContractMethod<[], [void], "nonpayable">;

  requireNotReconciling: TypedContractMethod<[], [void], "nonpayable">;

  requireReconciling: TypedContractMethod<[], [void], "nonpayable">;

  revokeRole: TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  setCuedEpochLength: TypedContractMethod<
    [length: BigNumberish],
    [void],
    "nonpayable"
  >;

  setGracePeriod: TypedContractMethod<
    [period: BigNumberish],
    [void],
    "nonpayable"
  >;

  setVersion: TypedContractMethod<[version: string], [void], "nonpayable">;

  supportsInterface: TypedContractMethod<
    [interfaceId: BytesLike],
    [boolean],
    "view"
  >;

  unpause: TypedContractMethod<[], [void], "nonpayable">;

  unsafeSetBilling: TypedContractMethod<
    [billing: AddressLike],
    [void],
    "nonpayable"
  >;

  unsafeSetLastEpochStart: TypedContractMethod<
    [start: BigNumberish],
    [void],
    "nonpayable"
  >;

  unsafeSetNodes: TypedContractMethod<
    [nodes: AddressLike],
    [void],
    "nonpayable"
  >;

  unsafeSetOperators: TypedContractMethod<
    [operators: AddressLike],
    [void],
    "nonpayable"
  >;

  unsafeSetProjects: TypedContractMethod<
    [projects: AddressLike],
    [void],
    "nonpayable"
  >;

  unsafeSetReservations: TypedContractMethod<
    [reservations: AddressLike],
    [void],
    "nonpayable"
  >;

  unsafeSetToken: TypedContractMethod<
    [token: AddressLike],
    [void],
    "nonpayable"
  >;

  unsafeSetUSDC: TypedContractMethod<[usdc: AddressLike], [void], "nonpayable">;

  unsafeWithdrawToken: TypedContractMethod<
    [to: AddressLike, amount: BigNumberish],
    [void],
    "nonpayable"
  >;

  unsafeWithdrawUSDC: TypedContractMethod<
    [to: AddressLike, amount: BigNumberish],
    [void],
    "nonpayable"
  >;

  upgradeTo: TypedContractMethod<
    [newImplementation: AddressLike],
    [void],
    "nonpayable"
  >;

  upgradeToAndCall: TypedContractMethod<
    [newImplementation: AddressLike, data: BytesLike],
    [void],
    "payable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "DEFAULT_ADMIN_ROLE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "RECONCILER_ROLE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "advanceEpoch"
  ): TypedContractMethod<[topologyNodeId: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "getBilling"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "getCuedEpochLength"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getEpochRemainder"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getGracePeriod"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getLastEpochLength"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getLastEpochStart"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getNextEpochLength"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getNodes"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "getNonce"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getOperators"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "getProjects"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "getReservations"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "getRoleAdmin"
  ): TypedContractMethod<[role: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "getToken"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "getUSDC"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "getVersion"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "grantRole"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "hasRole"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "initialize"
  ): TypedContractMethod<
    [admins: AddressLike[], data: EarthfastRegistryInitializeDataStruct],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "newNonceImpl"
  ): TypedContractMethod<[], [bigint], "nonpayable">;
  getFunction(
    nameOrSignature: "pause"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "paused"
  ): TypedContractMethod<[], [boolean], "view">;
  getFunction(
    nameOrSignature: "proxiableUUID"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "renounceRole"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "requireNotGracePeriod"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "requireNotReconciling"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "requireReconciling"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "revokeRole"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setCuedEpochLength"
  ): TypedContractMethod<[length: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setGracePeriod"
  ): TypedContractMethod<[period: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setVersion"
  ): TypedContractMethod<[version: string], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "supportsInterface"
  ): TypedContractMethod<[interfaceId: BytesLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "unpause"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "unsafeSetBilling"
  ): TypedContractMethod<[billing: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "unsafeSetLastEpochStart"
  ): TypedContractMethod<[start: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "unsafeSetNodes"
  ): TypedContractMethod<[nodes: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "unsafeSetOperators"
  ): TypedContractMethod<[operators: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "unsafeSetProjects"
  ): TypedContractMethod<[projects: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "unsafeSetReservations"
  ): TypedContractMethod<[reservations: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "unsafeSetToken"
  ): TypedContractMethod<[token: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "unsafeSetUSDC"
  ): TypedContractMethod<[usdc: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "unsafeWithdrawToken"
  ): TypedContractMethod<
    [to: AddressLike, amount: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "unsafeWithdrawUSDC"
  ): TypedContractMethod<
    [to: AddressLike, amount: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "upgradeTo"
  ): TypedContractMethod<
    [newImplementation: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "upgradeToAndCall"
  ): TypedContractMethod<
    [newImplementation: AddressLike, data: BytesLike],
    [void],
    "payable"
  >;

  getEvent(
    key: "AdminChanged"
  ): TypedContractEvent<
    AdminChangedEvent.InputTuple,
    AdminChangedEvent.OutputTuple,
    AdminChangedEvent.OutputObject
  >;
  getEvent(
    key: "BeaconUpgraded"
  ): TypedContractEvent<
    BeaconUpgradedEvent.InputTuple,
    BeaconUpgradedEvent.OutputTuple,
    BeaconUpgradedEvent.OutputObject
  >;
  getEvent(
    key: "EpochAdvanced"
  ): TypedContractEvent<
    EpochAdvancedEvent.InputTuple,
    EpochAdvancedEvent.OutputTuple,
    EpochAdvancedEvent.OutputObject
  >;
  getEvent(
    key: "Initialized"
  ): TypedContractEvent<
    InitializedEvent.InputTuple,
    InitializedEvent.OutputTuple,
    InitializedEvent.OutputObject
  >;
  getEvent(
    key: "Paused"
  ): TypedContractEvent<
    PausedEvent.InputTuple,
    PausedEvent.OutputTuple,
    PausedEvent.OutputObject
  >;
  getEvent(
    key: "RoleAdminChanged"
  ): TypedContractEvent<
    RoleAdminChangedEvent.InputTuple,
    RoleAdminChangedEvent.OutputTuple,
    RoleAdminChangedEvent.OutputObject
  >;
  getEvent(
    key: "RoleGranted"
  ): TypedContractEvent<
    RoleGrantedEvent.InputTuple,
    RoleGrantedEvent.OutputTuple,
    RoleGrantedEvent.OutputObject
  >;
  getEvent(
    key: "RoleRevoked"
  ): TypedContractEvent<
    RoleRevokedEvent.InputTuple,
    RoleRevokedEvent.OutputTuple,
    RoleRevokedEvent.OutputObject
  >;
  getEvent(
    key: "Unpaused"
  ): TypedContractEvent<
    UnpausedEvent.InputTuple,
    UnpausedEvent.OutputTuple,
    UnpausedEvent.OutputObject
  >;
  getEvent(
    key: "Upgraded"
  ): TypedContractEvent<
    UpgradedEvent.InputTuple,
    UpgradedEvent.OutputTuple,
    UpgradedEvent.OutputObject
  >;

  filters: {
    "AdminChanged(address,address)": TypedContractEvent<
      AdminChangedEvent.InputTuple,
      AdminChangedEvent.OutputTuple,
      AdminChangedEvent.OutputObject
    >;
    AdminChanged: TypedContractEvent<
      AdminChangedEvent.InputTuple,
      AdminChangedEvent.OutputTuple,
      AdminChangedEvent.OutputObject
    >;

    "BeaconUpgraded(address)": TypedContractEvent<
      BeaconUpgradedEvent.InputTuple,
      BeaconUpgradedEvent.OutputTuple,
      BeaconUpgradedEvent.OutputObject
    >;
    BeaconUpgraded: TypedContractEvent<
      BeaconUpgradedEvent.InputTuple,
      BeaconUpgradedEvent.OutputTuple,
      BeaconUpgradedEvent.OutputObject
    >;

    "EpochAdvanced(uint256)": TypedContractEvent<
      EpochAdvancedEvent.InputTuple,
      EpochAdvancedEvent.OutputTuple,
      EpochAdvancedEvent.OutputObject
    >;
    EpochAdvanced: TypedContractEvent<
      EpochAdvancedEvent.InputTuple,
      EpochAdvancedEvent.OutputTuple,
      EpochAdvancedEvent.OutputObject
    >;

    "Initialized(uint8)": TypedContractEvent<
      InitializedEvent.InputTuple,
      InitializedEvent.OutputTuple,
      InitializedEvent.OutputObject
    >;
    Initialized: TypedContractEvent<
      InitializedEvent.InputTuple,
      InitializedEvent.OutputTuple,
      InitializedEvent.OutputObject
    >;

    "Paused(address)": TypedContractEvent<
      PausedEvent.InputTuple,
      PausedEvent.OutputTuple,
      PausedEvent.OutputObject
    >;
    Paused: TypedContractEvent<
      PausedEvent.InputTuple,
      PausedEvent.OutputTuple,
      PausedEvent.OutputObject
    >;

    "RoleAdminChanged(bytes32,bytes32,bytes32)": TypedContractEvent<
      RoleAdminChangedEvent.InputTuple,
      RoleAdminChangedEvent.OutputTuple,
      RoleAdminChangedEvent.OutputObject
    >;
    RoleAdminChanged: TypedContractEvent<
      RoleAdminChangedEvent.InputTuple,
      RoleAdminChangedEvent.OutputTuple,
      RoleAdminChangedEvent.OutputObject
    >;

    "RoleGranted(bytes32,address,address)": TypedContractEvent<
      RoleGrantedEvent.InputTuple,
      RoleGrantedEvent.OutputTuple,
      RoleGrantedEvent.OutputObject
    >;
    RoleGranted: TypedContractEvent<
      RoleGrantedEvent.InputTuple,
      RoleGrantedEvent.OutputTuple,
      RoleGrantedEvent.OutputObject
    >;

    "RoleRevoked(bytes32,address,address)": TypedContractEvent<
      RoleRevokedEvent.InputTuple,
      RoleRevokedEvent.OutputTuple,
      RoleRevokedEvent.OutputObject
    >;
    RoleRevoked: TypedContractEvent<
      RoleRevokedEvent.InputTuple,
      RoleRevokedEvent.OutputTuple,
      RoleRevokedEvent.OutputObject
    >;

    "Unpaused(address)": TypedContractEvent<
      UnpausedEvent.InputTuple,
      UnpausedEvent.OutputTuple,
      UnpausedEvent.OutputObject
    >;
    Unpaused: TypedContractEvent<
      UnpausedEvent.InputTuple,
      UnpausedEvent.OutputTuple,
      UnpausedEvent.OutputObject
    >;

    "Upgraded(address)": TypedContractEvent<
      UpgradedEvent.InputTuple,
      UpgradedEvent.OutputTuple,
      UpgradedEvent.OutputObject
    >;
    Upgraded: TypedContractEvent<
      UpgradedEvent.InputTuple,
      UpgradedEvent.OutputTuple,
      UpgradedEvent.OutputObject
    >;
  };
}
